name: Release Packaging

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  release-linux-appimage:
    if: github.event_name == 'release'
    runs-on: ubuntu-22.04
    
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y libfuse2 qt6-base-dev qt6-webengine-dev qt6-tools-dev build-essential cmake desktop-file-utils wget
          wget https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
          chmod +x linuxdeployqt-continuous-x86_64.AppImage
          sudo mv linuxdeployqt-continuous-x86_64.AppImage /usr/local/bin/linuxdeployqt

      - name: Set up Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.6.2'
          modules: 'qtwebengine qtwebchannel qtpositioning'

      - name: Build
        run: |
          mkdir -p build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          make -j$(nproc)

      - name: Prepare AppDir
        run: |
          mkdir -p build/AppDir/usr/bin
          mkdir -p build/AppDir/usr/share/applications
          mkdir -p build/AppDir/usr/share/icons/hicolor/256x256/apps
          cp build/ChatGPT build/AppDir/usr/bin/
          cp resources/chatgpt.desktop build/AppDir/usr/share/applications/
          cp icons/chatgpt.png build/AppDir/usr/share/icons/hicolor/256x256/apps/

      - name: Bundle AppImage
        run: |
          cd build
          linuxdeployqt AppDir/usr/share/applications/chatgpt.desktop -appimage

      - name: Upload AppImage to release
        uses: softprops/action-gh-release@v1
        with:
          files: build/*.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-macos:
    if: github.event_name == 'release'
    runs-on: macos-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.6.2'
          modules: 'qtwebengine qtwebchannel qtpositioning'

      - name: Build macOS app
        run: |
          mkdir -p build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          make -j$(sysctl -n hw.logicalcpu)

      - name: Create DMG
        run: |
          mkdir -p dmg-staging
          cp -R build/ChatGPT.app dmg-staging/
          hdiutil create ChatGPT.dmg -volname "ChatGPT" -srcfolder dmg-staging -ov -format UDZO

      - name: Upload macOS DMG to release
        uses: softprops/action-gh-release@v1
        with:
            files: ChatGPT.dmg
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-windows-msi:
    if: github.event_name == 'release'
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Install WiX Toolset
        run: choco install wixtoolset --no-progress

      - name: Set up Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.6.2'
          modules: 'qtwebengine qtwebchannel qtpositioning'

      - name: Configure with CPack for WIX
        run: |
          mkdir build
          cmake -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release -DCPACK_GENERATOR=WIX

      - name: Build and create MSI installer
        run: |
          cmake --build build --config Release
          cmake --build build --config Release --target package

      - name: Upload MSI to release
        uses: softprops/action-gh-release@v1
        with:
          files: build/*.msi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
